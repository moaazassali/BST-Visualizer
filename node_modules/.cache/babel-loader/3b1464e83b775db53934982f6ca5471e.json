{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Muaath\\\\Desktop\\\\AVL\\\\src\\\\AVLTreeVisualizer\\\\InsertionForm.jsx\";\nimport React, { Component } from \"react\";\nimport AVLTree from \"./AVLTreeClass\";\nexport default class InsertionForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      number: \"\",\n      tree: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleClick() {\n    if (isNaN(this.state.number)) {\n      alert(\"Please insert a number\");\n      return;\n    }\n\n    if (this.state.tree === null) {\n      this.setState({\n        tree: new AVLTree(this.state.number),\n        test: \"gg\"\n      });\n      console.log(\"Created a tree with a root of \" + this.state);\n    } else this.state.tree.insert(this.state.number);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.number,\n          name: \"number\",\n          placeholder: \"Insert a Value\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: \"Insert!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Muaath/Desktop/AVL/src/AVLTreeVisualizer/InsertionForm.jsx"],"names":["React","Component","AVLTree","InsertionForm","constructor","state","number","tree","handleChange","bind","handleClick","event","name","value","target","setState","isNaN","alert","test","console","log","insert","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,eAAe,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AACjDG,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,KAAK,CAACG,MAA5B;AACA,SAAKC,QAAL,CAAc;AACV,OAACH,IAAD,GAAQC;AADE,KAAd;AAGH;;AAEDH,EAAAA,WAAW,GAAG;AACV,QAAIM,KAAK,CAAC,KAAKX,KAAL,CAAWC,MAAZ,CAAT,EAA8B;AAC1BW,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACA;AACH;;AAED,QAAI,KAAKZ,KAAL,CAAWE,IAAX,KAAoB,IAAxB,EAA8B;AAC1B,WAAKQ,QAAL,CAAc;AACVR,QAAAA,IAAI,EAAE,IAAIL,OAAJ,CAAY,KAAKG,KAAL,CAAWC,MAAvB,CADI;AAEVY,QAAAA,IAAI,EAAE;AAFI,OAAd;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmC,KAAKf,KAApD;AACH,KAND,MAOK,KAAKA,KAAL,CAAWE,IAAX,CAAgBc,MAAhB,CAAuB,KAAKhB,KAAL,CAAWC,MAAlC;AACR;;AAEDgB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA,+BACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC,MAArC;AAA6C,UAAA,IAAI,EAAC,QAAlD;AAA2D,UAAA,WAAW,EAAC,gBAAvE;AAAwF,UAAA,QAAQ,EAAE,KAAKE;AAAvG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAQ,QAAA,OAAO,EAAE,KAAKE,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA3CgD","sourcesContent":["import React, { Component } from \"react\"\r\n\r\nimport AVLTree from \"./AVLTreeClass\";\r\n\r\nexport default class InsertionForm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            number: \"\",\r\n            tree: null\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleClick() {\r\n        if (isNaN(this.state.number)) {\r\n            alert(\"Please insert a number\");\r\n            return;\r\n        }\r\n\r\n        if (this.state.tree === null) {\r\n            this.setState({\r\n                tree: new AVLTree(this.state.number),\r\n                test: \"gg\"\r\n            })\r\n            console.log(\"Created a tree with a root of \" + this.state)\r\n        }\r\n        else this.state.tree.insert(this.state.number);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form>\r\n                    <input type=\"text\" value={this.state.number} name=\"number\" placeholder=\"Insert a Value\" onChange={this.handleChange}/>\r\n                </form>\r\n                <button onClick={this.handleClick}>Insert!</button>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}